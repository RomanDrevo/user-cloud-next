{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { openNotification, setLoading, toggleDeleteUserModal, toggleErrorWindowIsOpen } from '../actions/uIStateActions';\nimport { createUserApi, deleteUserApi, fetchUsersApi, loginApi } from '../../api';\nimport { loginSuccess } from '../actions/authActions';\nimport { deleteUserSuccess, setUsersToStore } from '../actions/usersActions';\nimport { setAlert } from '../actions/alertActions';\nimport { NOTIFICATIONS } from '../../utils/constatns';\nexport function* loginSaga(data) {\n  try {\n    yield put(setLoading(true));\n    const response = yield call(loginApi, data.payload);\n\n    if (response.status === 200 && response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      yield put(loginSuccess(data.payload.email));\n    }\n\n    yield put(setLoading(false));\n  } catch (error) {\n    console.log('---e:', error);\n    yield put(setLoading(false));\n    yield put(setAlert({\n      status: 'error',\n      title: 'Error',\n      message: error.message\n    }));\n    yield put(toggleErrorWindowIsOpen());\n  }\n}\nexport function* fetchUsersSaga() {\n  try {\n    yield put(setLoading(true));\n    const response = yield call(fetchUsersApi);\n\n    if (response.status === 200 && response.data) {\n      yield put(setUsersToStore(response.data));\n    }\n\n    yield put(setLoading(false));\n  } catch (error) {\n    yield put(setLoading(false));\n    yield put(setAlert({\n      status: 'error',\n      title: 'Error',\n      message: error.message\n    }));\n    yield put(toggleErrorWindowIsOpen());\n  }\n}\nexport function* deleteUserSaga(data) {\n  try {\n    yield put(setLoading(true));\n    const response = yield call(deleteUserApi, data);\n\n    if (response.status === 200 && response.data.deletionTime) {\n      yield put(deleteUserSuccess(data.payload));\n      yield put(toggleDeleteUserModal());\n      yield put(openNotification(NOTIFICATIONS.delete));\n    }\n\n    yield put(setLoading(false));\n  } catch (error) {\n    yield put(setLoading(false));\n    yield put(setAlert({\n      status: 'error',\n      title: 'Error',\n      message: error.message\n    }));\n    yield put(toggleErrorWindowIsOpen());\n  }\n}\nexport function* createUserSaga(data) {\n  try {\n    yield put(setLoading(true));\n    const newUser = data.payload;\n    newUser.id = Math.floor(Math.random() * (100000 - 1 + 1)) + 1;\n    newUser.BirthDate = new Date(newUser.birthDate).getTime();\n    delete newUser.birthDate;\n    const response = yield call(createUserApi, data);\n\n    if (response.status === 200 && response.data) {\n      yield put(openNotification(NOTIFICATIONS.add));\n    }\n\n    yield put(setLoading(false));\n  } catch (error) {\n    yield put(setLoading(false));\n    yield put(setAlert({\n      status: 'error',\n      title: 'Error',\n      message: error.message\n    }));\n    yield put(toggleErrorWindowIsOpen());\n  }\n}","map":{"version":3,"sources":["C:/Users/Roman/code/user-cloud-next/src/store/saga/sagas.js"],"names":["call","put","openNotification","setLoading","toggleDeleteUserModal","toggleErrorWindowIsOpen","createUserApi","deleteUserApi","fetchUsersApi","loginApi","loginSuccess","deleteUserSuccess","setUsersToStore","setAlert","NOTIFICATIONS","loginSaga","data","response","payload","status","token","localStorage","setItem","email","error","console","log","title","message","fetchUsersSaga","deleteUserSaga","deletionTime","delete","createUserSaga","newUser","id","Math","floor","random","BirthDate","Date","birthDate","getTime","add"],"mappings":"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","sourcesContent":["import {call, put} from 'redux-saga/effects';\r\nimport {\r\n    openNotification,\r\n    setLoading,\r\n    toggleDeleteUserModal,\r\n    toggleErrorWindowIsOpen\r\n} from '../actions/uIStateActions';\r\nimport {createUserApi, deleteUserApi, fetchUsersApi, loginApi} from '../../api';\r\nimport {loginSuccess} from '../actions/authActions';\r\nimport {deleteUserSuccess, setUsersToStore} from '../actions/usersActions';\r\nimport {setAlert} from '../actions/alertActions';\r\nimport {NOTIFICATIONS} from '../../utils/constatns';\r\n\r\nexport function* loginSaga(data) {\r\n    try {\r\n        yield put(setLoading(true));\r\n        const response = yield call(loginApi, data.payload);\r\n\r\n        if (response.status === 200 && response.data.token) {\r\n            localStorage.setItem('token', response.data.token);\r\n            yield put(loginSuccess(data.payload.email));\r\n        }\r\n        yield put(setLoading(false));\r\n\r\n    } catch (error) {\r\n        console.log('---e:', error);\r\n        yield put(setLoading(false));\r\n\r\n        yield put(\r\n            setAlert({\r\n                status: 'error',\r\n                title: 'Error',\r\n                message: error.message\r\n            })\r\n        );\r\n        yield put(toggleErrorWindowIsOpen());\r\n\r\n    }\r\n}\r\n\r\nexport function* fetchUsersSaga() {\r\n    try {\r\n        yield put(setLoading(true));\r\n        const response = yield call(fetchUsersApi);\r\n\r\n        if (response.status === 200 && response.data) {\r\n            yield put(setUsersToStore(response.data));\r\n        }\r\n\r\n        yield put(setLoading(false));\r\n\r\n    } catch (error) {\r\n        yield put(setLoading(false));\r\n        yield put(\r\n            setAlert({\r\n                status: 'error',\r\n                title: 'Error',\r\n                message: error.message\r\n            })\r\n        );\r\n        yield put(toggleErrorWindowIsOpen());\r\n    }\r\n}\r\n\r\nexport function* deleteUserSaga(data) {\r\n    try {\r\n        yield put(setLoading(true));\r\n        const response = yield call(deleteUserApi, data);\r\n        if (response.status === 200 && response.data.deletionTime) {\r\n            yield put(deleteUserSuccess(data.payload));\r\n            yield put(toggleDeleteUserModal());\r\n            yield put(openNotification(NOTIFICATIONS.delete));\r\n        }\r\n        yield put(setLoading(false));\r\n    } catch (error) {\r\n        yield put(setLoading(false));\r\n        yield put(\r\n            setAlert({\r\n                status: 'error',\r\n                title: 'Error',\r\n                message: error.message\r\n            })\r\n        );\r\n        yield put(toggleErrorWindowIsOpen());\r\n    }\r\n}\r\n\r\nexport function* createUserSaga(data) {\r\n    try {\r\n        yield put(setLoading(true));\r\n        const newUser = data.payload;\r\n        newUser.id = Math.floor(Math.random() * (100000 - 1 + 1)) + 1;\r\n        newUser.BirthDate = new Date(newUser.birthDate).getTime();\r\n        delete newUser.birthDate;\r\n        const response = yield call(createUserApi, data);\r\n        if (response.status === 200 && response.data) {\r\n            yield put(openNotification(NOTIFICATIONS.add));\r\n        }\r\n        yield put(setLoading(false));\r\n    } catch (error) {\r\n        yield put(setLoading(false));\r\n        yield put(\r\n            setAlert({\r\n                status: 'error',\r\n                title: 'Error',\r\n                message: error.message\r\n            })\r\n        );\r\n        yield put(toggleErrorWindowIsOpen());\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}