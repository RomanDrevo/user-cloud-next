{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roman\\\\code\\\\user-cloud-next\\\\src\\\\pages\\\\users\\\\UsersPage.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../../store/actions/authActions';\nimport style from './UsersPage.module.scss';\nimport UserCard from '../../components/user-card/UserCard';\nimport { deleteUser, fetchUsers, updateSearch } from '../../store/actions/usersActions';\nimport { getIsModalVisible, getIsNotificationOpen, getNotificationMessage, getSearchResult, getSearchText, isLoading } from '../../store/selectors';\nimport Spinner from '../../components/spinner';\nimport PageLayout from '../../components/page-layout/PageLayout';\nimport EmptyState from '../../components/empty-state/EmptyState';\nimport { Modal, Input } from 'antd';\nimport { closeNotification, toggleDeleteUserModal } from '../../store/actions/uIStateActions';\nimport { openNotification } from '../../utils/helpers';\nimport { NOTIFICATIONS } from '../../utils/constatns';\nimport { SearchOutlined } from '@ant-design/icons';\nconst {\n  Search\n} = Input;\n\nconst UsersPage = ({\n  logout,\n  fetchUsers,\n  searchResult,\n  isLoading,\n  deleteUser,\n  isNotificationOpen,\n  isModalVisible,\n  toggleDeleteUserModal,\n  notificationMessage,\n  closeNotification,\n  updateSearch,\n  searchText\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchUsers();\n    closeNotification();\n  }, []);\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  const {\n    0: user,\n    1: setUser\n  } = useState('');\n\n  const handleDeleteUser = user => {\n    toggleDeleteUserModal();\n    setUser(user);\n  };\n\n  const handleOk = () => {\n    deleteUser(user.objectId);\n  };\n\n  const handleCancel = () => {\n    toggleDeleteUserModal();\n  };\n\n  useEffect(() => {\n    if (isNotificationOpen && notificationMessage === NOTIFICATIONS.delete) {\n      openNotification(notificationMessage);\n    }\n  }, [isNotificationOpen]);\n\n  const handleOnSearchChange = e => {\n    updateSearch(e.target.value);\n  };\n\n  return __jsx(PageLayout, {\n    handleLogout: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: style['users-page-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Organization Users\"), __jsx(Search, {\n    placeholder: \"Search for a user\",\n    onChange: handleOnSearchChange,\n    value: searchText,\n    style: {\n      width: 230\n    },\n    className: \"user-search\",\n    prefix: __jsx(SearchOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }),\n    suffix: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  })), isLoading ? __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }) : searchResult.length ? __jsx(\"div\", {\n    className: \"users-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, searchResult.map(user => __jsx(UserCard, {\n    handleDeleteUser: handleDeleteUser,\n    key: user.ID,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 41\n    }\n  }))) : __jsx(EmptyState, {\n    title: \"Oops!\",\n    description: \"No users found.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 31\n    }\n  }), __jsx(Modal, {\n    centered: true,\n    transparent: true,\n    title: \"User will be deleted!\",\n    visible: isModalVisible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"Are you sure?\"))));\n};\n\n_s(UsersPage, \"Lo8TJysltEVDx0LGVRYN124XrJE=\");\n\n_c = UsersPage;\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: isLoading(state),\n    isModalVisible: getIsModalVisible(state),\n    isNotificationOpen: getIsNotificationOpen(state),\n    searchText: getSearchText(state),\n    searchResult: getSearchResult(state),\n    notificationMessage: getNotificationMessage(state)\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch(logout()),\n    deleteUser: data => dispatch(deleteUser(data)),\n    toggleDeleteUserModal: () => dispatch(toggleDeleteUserModal()),\n    closeNotification: () => dispatch(closeNotification()),\n    updateSearch: data => dispatch(updateSearch(data)),\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"sources":["C:/Users/Roman/code/user-cloud-next/src/pages/users/UsersPage.js"],"names":["React","useEffect","useState","connect","logout","style","UserCard","deleteUser","fetchUsers","updateSearch","getIsModalVisible","getIsNotificationOpen","getNotificationMessage","getSearchResult","getSearchText","isLoading","Spinner","PageLayout","EmptyState","Modal","Input","closeNotification","toggleDeleteUserModal","openNotification","NOTIFICATIONS","SearchOutlined","Search","UsersPage","searchResult","isNotificationOpen","isModalVisible","notificationMessage","searchText","handleLogout","user","setUser","handleDeleteUser","handleOk","objectId","handleCancel","delete","handleOnSearchChange","e","target","value","width","length","map","ID","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,iCAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,SAAQC,UAAR,EAAoBC,UAApB,EAAgCC,YAAhC,QAAmD,kCAAnD;AACA,SACIC,iBADJ,EAEIC,qBAFJ,EAGIC,sBAHJ,EAIIC,eAJJ,EAKIC,aALJ,EAMIC,SANJ,QAOO,uBAPP;AAQA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,SAAQC,KAAR,EAAeC,KAAf,QAA2B,MAA3B;AACA,SAAQC,iBAAR,EAA2BC,qBAA3B,QAAuD,oCAAvD;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AAEA,MAAM;AAACC,EAAAA;AAAD,IAAWN,KAAjB;;AAEA,MAAMO,SAAS,GAAG,CACd;AACIvB,EAAAA,MADJ;AAEII,EAAAA,UAFJ;AAGIoB,EAAAA,YAHJ;AAIIb,EAAAA,SAJJ;AAKIR,EAAAA,UALJ;AAMIsB,EAAAA,kBANJ;AAOIC,EAAAA,cAPJ;AAQIR,EAAAA,qBARJ;AASIS,EAAAA,mBATJ;AAUIV,EAAAA,iBAVJ;AAWIZ,EAAAA,YAXJ;AAYIuB,EAAAA;AAZJ,CADc,KAeb;AAAA;;AAED/B,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,UAAU;AACVa,IAAAA,iBAAiB;AACpB,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMY,YAAY,GAAG,MAAM;AACvB7B,IAAAA,MAAM;AACT,GAFD;;AAIA,QAAM;AAAA,OAAC8B,IAAD;AAAA,OAAOC;AAAP,MAAkBjC,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMkC,gBAAgB,GAAGF,IAAI,IAAI;AAC7BZ,IAAAA,qBAAqB;AACrBa,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAHD;;AAKA,QAAMG,QAAQ,GAAG,MAAM;AACnB9B,IAAAA,UAAU,CAAC2B,IAAI,CAACI,QAAN,CAAV;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACvBjB,IAAAA,qBAAqB;AACxB,GAFD;;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI4B,kBAAkB,IAAIE,mBAAmB,KAAKP,aAAa,CAACgB,MAAhE,EAAwE;AACpEjB,MAAAA,gBAAgB,CAACQ,mBAAD,CAAhB;AACH;AACJ,GAJQ,EAIN,CAACF,kBAAD,CAJM,CAAT;;AAMA,QAAMY,oBAAoB,GAAGC,CAAC,IAAI;AAC9BjC,IAAAA,YAAY,CAACiC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,SAEI,MAAC,UAAD;AAAY,IAAA,YAAY,EAAEX,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,KAAK,CAAC,oBAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,MAAC,MAAD;AACI,IAAA,WAAW,EAAC,mBADhB;AAEI,IAAA,QAAQ,EAAEoC,oBAFd;AAGI,IAAA,KAAK,EAAET,UAHX;AAII,IAAA,KAAK,EAAE;AAACa,MAAAA,KAAK,EAAE;AAAR,KAJX;AAKI,IAAA,SAAS,EAAC,aALd;AAMI,IAAA,MAAM,EAAE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANZ;AAOI,IAAA,MAAM,EAAE,EAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAeQ9B,SAAS,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACLa,YAAY,CAACkB,MAAb,GACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQlB,YAAY,CAACmB,GAAb,CAAiBb,IAAI,IACjB,MAAC,QAAD;AACI,IAAA,gBAAgB,EAAEE,gBADtB;AAEI,IAAA,GAAG,EAAEF,IAAI,CAACc,EAFd;AAGI,IAAA,IAAI,EAAEd,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFR,CADJ,GAYM,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,OAAlB;AAA0B,IAAA,WAAW,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BlB,EA8BI,MAAC,KAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,WAAW,MAFf;AAGI,IAAA,KAAK,EAAC,uBAHV;AAII,IAAA,OAAO,EAAEJ,cAJb;AAKI,IAAA,IAAI,EAAEO,QALV;AAMI,IAAA,QAAQ,EAAEE,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARJ,CA9BJ,CADJ,CAFJ;AA+CH,CAlGD;;GAAMZ,S;;KAAAA,S;;AAoGN,MAAMsB,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHnC,IAAAA,SAAS,EAAEA,SAAS,CAACmC,KAAD,CADjB;AAEHpB,IAAAA,cAAc,EAAEpB,iBAAiB,CAACwC,KAAD,CAF9B;AAGHrB,IAAAA,kBAAkB,EAAElB,qBAAqB,CAACuC,KAAD,CAHtC;AAIHlB,IAAAA,UAAU,EAAElB,aAAa,CAACoC,KAAD,CAJtB;AAKHtB,IAAAA,YAAY,EAAEf,eAAe,CAACqC,KAAD,CAL1B;AAMHnB,IAAAA,mBAAmB,EAAEnB,sBAAsB,CAACsC,KAAD;AANxC,GAAP;AAQH,CATD;;AAWA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHhD,IAAAA,MAAM,EAAE,MAAMgD,QAAQ,CAAChD,MAAM,EAAP,CADnB;AAEHG,IAAAA,UAAU,EAAE8C,IAAI,IAAID,QAAQ,CAAC7C,UAAU,CAAC8C,IAAD,CAAX,CAFzB;AAGH/B,IAAAA,qBAAqB,EAAE,MAAM8B,QAAQ,CAAC9B,qBAAqB,EAAtB,CAHlC;AAIHD,IAAAA,iBAAiB,EAAE,MAAM+B,QAAQ,CAAC/B,iBAAiB,EAAlB,CAJ9B;AAKHZ,IAAAA,YAAY,EAAE4C,IAAI,IAAID,QAAQ,CAAC3C,YAAY,CAAC4C,IAAD,CAAb,CAL3B;AAMH7C,IAAAA,UAAU,EAAE,MAAM4C,QAAQ,CAAC5C,UAAU,EAAX;AANvB,GAAP;AAQH;;AAED,eAAeL,OAAO,CAAC8C,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxB,SAA7C,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../store/actions/authActions';\r\nimport style from './UsersPage.module.scss';\r\nimport UserCard from '../../components/user-card/UserCard';\r\nimport {deleteUser, fetchUsers, updateSearch} from '../../store/actions/usersActions';\r\nimport {\r\n    getIsModalVisible,\r\n    getIsNotificationOpen,\r\n    getNotificationMessage,\r\n    getSearchResult,\r\n    getSearchText,\r\n    isLoading\r\n} from '../../store/selectors';\r\nimport Spinner from '../../components/spinner';\r\nimport PageLayout from '../../components/page-layout/PageLayout';\r\nimport EmptyState from '../../components/empty-state/EmptyState';\r\nimport {Modal, Input} from 'antd';\r\nimport {closeNotification, toggleDeleteUserModal} from '../../store/actions/uIStateActions';\r\nimport {openNotification} from '../../utils/helpers';\r\nimport {NOTIFICATIONS} from '../../utils/constatns';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\n\r\nconst {Search} = Input;\r\n\r\nconst UsersPage = (\r\n    {\r\n        logout,\r\n        fetchUsers,\r\n        searchResult,\r\n        isLoading,\r\n        deleteUser,\r\n        isNotificationOpen,\r\n        isModalVisible,\r\n        toggleDeleteUserModal,\r\n        notificationMessage,\r\n        closeNotification,\r\n        updateSearch,\r\n        searchText\r\n    }\r\n) => {\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n        closeNotification();\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n    };\r\n\r\n    const [user, setUser] = useState('');\r\n\r\n    const handleDeleteUser = user => {\r\n        toggleDeleteUserModal();\r\n        setUser(user);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        deleteUser(user.objectId);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        toggleDeleteUserModal();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isNotificationOpen && notificationMessage === NOTIFICATIONS.delete) {\r\n            openNotification(notificationMessage);\r\n        }\r\n    }, [isNotificationOpen]);\r\n\r\n    const handleOnSearchChange = e => {\r\n        updateSearch(e.target.value);\r\n    };\r\n\r\n    return (\r\n\r\n        <PageLayout handleLogout={handleLogout}>\r\n            <div className={style['users-page-wrapper']}>\r\n                <div className='header'>\r\n                    <div className='title'>Organization Users</div>\r\n                    <Search\r\n                        placeholder=\"Search for a user\"\r\n                        onChange={handleOnSearchChange}\r\n                        value={searchText}\r\n                        style={{width: 230}}\r\n                        className='user-search'\r\n                        prefix={<SearchOutlined />}\r\n                        suffix={''}\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    isLoading ? <Spinner/> :\r\n                        searchResult.length ?\r\n                            <div className='users-list'>\r\n                                {\r\n                                    searchResult.map(user => (\r\n                                        <UserCard\r\n                                            handleDeleteUser={handleDeleteUser}\r\n                                            key={user.ID}\r\n                                            user={user}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            : <EmptyState title='Oops!' description='No users found.'/>\r\n                }\r\n                <Modal\r\n                    centered\r\n                    transparent\r\n                    title=\"User will be deleted!\"\r\n                    visible={isModalVisible}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                >\r\n                    <h2>Are you sure?</h2>\r\n                </Modal>\r\n            </div>\r\n        </PageLayout>\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: isLoading(state),\r\n        isModalVisible: getIsModalVisible(state),\r\n        isNotificationOpen: getIsNotificationOpen(state),\r\n        searchText: getSearchText(state),\r\n        searchResult: getSearchResult(state),\r\n        notificationMessage: getNotificationMessage(state),\r\n    };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout()),\r\n        deleteUser: data => dispatch(deleteUser(data)),\r\n        toggleDeleteUserModal: () => dispatch(toggleDeleteUserModal()),\r\n        closeNotification: () => dispatch(closeNotification()),\r\n        updateSearch: data => dispatch(updateSearch(data)),\r\n        fetchUsers: () => dispatch(fetchUsers())\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersPage);\r\n"]},"metadata":{},"sourceType":"module"}